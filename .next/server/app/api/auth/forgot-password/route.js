"use strict";(()=>{var e={};e.id=9118,e.ids=[9118],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},80665:e=>{e.exports=require("dns")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},16090:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>g,patchFetch:()=>P,requestAsyncStorage:()=>m,routeModule:()=>w,serverHooks:()=>f,staticGenerationAsyncStorage:()=>q});var t={};s.r(t),s.d(t,{POST:()=>x});var o=s(73278),a=s(45002),i=s(54877),p=s(71309),n=s(53524),u=s(56742),d=s(84770),l=s.n(d);let c=new n.PrismaClient,h=u.createTransport({host:process.env.SMTP_HOST||"smtp.gmail.com",port:587,secure:!1,auth:{user:process.env.SMTP_USER,pass:process.env.SMTP_PASS}});async function x(e){try{let{email:r}=await e.json();if(!r)return p.NextResponse.json({error:"Email is required"},{status:400});let s=await c.user.findUnique({where:{email:r}});if(!s)return p.NextResponse.json({success:!0,message:"If an account with that email exists, a reset link has been sent."});let t=l().randomBytes(32).toString("hex"),o=new Date(Date.now()+36e5);await c.user.update({where:{id:s.id},data:{passwordResetToken:t,passwordResetExpires:o}});let a=`${process.env.NEXT_PUBLIC_APP_URL||"http://localhost:3000"}/reset-password?token=${t}`;return await h.sendMail({from:process.env.SMTP_FROM||"noreply@iocl.co.in",to:r,subject:"Password Reset Request - IOCL TAMS",html:`
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2>Password Reset Request</h2>
          <p>You requested a password reset for your IOCL TAMS account.</p>
          <p>Click the link below to reset your password:</p>
          <a href="${a}" style="background-color: #ef4444; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
            Reset Password
          </a>
          <p>This link will expire in 1 hour.</p>
          <p>If you didn't request this reset, please ignore this email.</p>
        </div>
      `}),p.NextResponse.json({success:!0,message:"If an account with that email exists, a reset link has been sent."})}catch(e){return console.error("Forgot password error:",e),p.NextResponse.json({error:"Failed to process password reset request"},{status:500})}}let w=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/forgot-password/route",pathname:"/api/auth/forgot-password",filename:"route",bundlePath:"app/api/auth/forgot-password/route"},resolvedPagePath:"/workspace/app/api/auth/forgot-password/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:q,serverHooks:f}=w,g="/api/auth/forgot-password/route";function P(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:q})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[7787,4833,6742],()=>s(16090));module.exports=t})();