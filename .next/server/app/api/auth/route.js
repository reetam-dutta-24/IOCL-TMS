"use strict";(()=>{var e={};e.id=5932,e.ids=[5932],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},61989:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>c,staticGenerationAsyncStorage:()=>m});var o={};t.r(o),t.d(o,{POST:()=>u});var s=t(73278),a=t(45002),n=t(54877),i=t(71309),l=t(16910);async function u(e){try{let{employeeId:r,password:t}=await e.json();if(console.log(`🚀 Login attempt - Employee ID: ${r}, Password provided: ${!!t}`),!r||!t)return console.log(`❌ Missing credentials - Employee ID: ${!!r}, Password: ${!!t}`),i.NextResponse.json({error:"Employee ID and password are required"},{status:400});let o=await (0,l.So)(r,t);if(!o)return console.log(`❌ Authentication failed for Employee ID: ${r}`),i.NextResponse.json({error:"Invalid credentials"},{status:401});console.log(`✅ Authentication successful for: ${o.employeeId} - ${o.firstName} ${o.lastName}`);let s=(0,l.RA)(o),a=i.NextResponse.json({success:!0,user:{id:o.id,employeeId:o.employeeId,name:`${o.firstName} ${o.lastName}`,firstName:o.firstName,lastName:o.lastName,email:o.email,role:o.role,department:o.department,isActive:!0},token:s});return a.cookies.set("auth-token",s,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800}),a}catch(e){return console.error("Authentication error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/route",pathname:"/api/auth",filename:"route",bundlePath:"app/api/auth/route"},resolvedPagePath:"/workspace/app/api/auth/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:c}=p,f="/api/auth/route";function h(){return(0,n.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:m})}},16910:(e,r,t)=>{t.d(r,{Gv:()=>i,RA:()=>l,So:()=>u,c_:()=>n});var o=t(67390),s=t(93981);let a=new(t(53524)).PrismaClient,n=async e=>await s.vp(e,12),i=async(e,r)=>await s.qu(e,r),l=e=>{let r=process.env.JWT_SECRET||"fallback-secret-key";return o.sign({id:e.id,employeeId:e.employeeId,firstName:e.firstName,lastName:e.lastName,email:e.email,role:e.role,department:e.department},r,{expiresIn:"7d"})},u=async(e,r)=>{try{console.log(`🔍 Authentication attempt for Employee ID: ${e}`);let t=await a.user.findUnique({where:{employeeId:e},include:{role:!0,department:!0}});if(!t)return console.log(`❌ User not found for Employee ID: ${e}`),null;if(!t.password)return console.log(`❌ User ${e} has no password set`),null;console.log(`✅ User found: ${t.firstName} ${t.lastName} (${t.employeeId})`),console.log(`✅ User active: ${t.isActive}`),console.log(`✅ Password hash exists: ${!!t.password}`);let o=await i(r,t.password);if(console.log(`🔑 Password validation result: ${o}`),!o)return console.log(`❌ Invalid password for user: ${e}`),null;if(!t.isActive)return console.log(`❌ User ${e} is not active`),null;return{id:t.id,employeeId:t.employeeId,firstName:t.firstName,lastName:t.lastName,email:t.email,role:t.role.name,department:t.department?.name||"Unknown",isActive:t.isActive}}catch(e){return console.error("Authentication error:",e),null}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[7787,4833,5990],()=>t(61989));module.exports=o})();