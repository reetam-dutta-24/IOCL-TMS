"use strict";(()=>{var e={};e.id=7014,e.ids=[7014],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},68786:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>I,patchFetch:()=>v,requestAsyncStorage:()=>w,routeModule:()=>f,serverHooks:()=>q,staticGenerationAsyncStorage:()=>N});var r={};t.r(r),t.d(r,{DELETE:()=>m,GET:()=>d,PATCH:()=>p});var a=t(73278),o=t(45002),n=t(54877),i=t(71309),u=t(53524),l=t(16910);let c=new u.PrismaClient;async function d(e,{params:s}){try{let e=parseInt(s.id);if(isNaN(e))return i.NextResponse.json({error:"Invalid request ID"},{status:400});let t=await c.accessRequest.findUnique({where:{id:e},include:{requestedRole:!0,department:!0,requester:{select:{id:!0,firstName:!0,lastName:!0,email:!0}},reviewer:{select:{id:!0,firstName:!0,lastName:!0,email:!0}}}});if(!t)return i.NextResponse.json({error:"Access request not found"},{status:404});return i.NextResponse.json({success:!0,data:t})}catch(e){return console.error("Error fetching access request:",e),i.NextResponse.json({error:"Failed to fetch access request"},{status:500})}}async function p(e,{params:s}){try{let{action:t,reviewComment:r,reviewerId:a}=await e.json(),o=parseInt(s.id);if(isNaN(o))return i.NextResponse.json({error:"Invalid request ID"},{status:400});if(!t||!["approve","reject"].includes(t))return i.NextResponse.json({error:"Invalid action. Must be 'approve' or 'reject'"},{status:400});let n=await c.accessRequest.findUnique({where:{id:o},include:{requestedRole:!0,department:!0}});if(!n)return i.NextResponse.json({error:"Access request not found"},{status:404});if(n.status!==u.AccessRequestStatus.PENDING)return i.NextResponse.json({error:"Access request has already been processed"},{status:400});if(a&&!await c.user.findUnique({where:{id:a}}))return i.NextResponse.json({error:"Invalid reviewer ID"},{status:400});let d=await c.accessRequest.update({where:{id:o},data:{status:"approve"===t?u.AccessRequestStatus.APPROVED:u.AccessRequestStatus.REJECTED,reviewedAt:new Date,reviewComment:r||null,reviewedBy:a||null}});if("approve"===t)try{if(await c.user.findFirst({where:{OR:[{employeeId:n.employeeId},{email:n.email}]}}))return await c.accessRequest.update({where:{id:o},data:{status:u.AccessRequestStatus.PENDING,reviewedAt:null,reviewComment:"User with this employee ID or email already exists",reviewedBy:null}}),i.NextResponse.json({error:"User with this employee ID or email already exists"},{status:409});let e="Welcome@123",s=await (0,l.c_)(e);console.log("Creating user with data:",{employeeId:n.employeeId,firstName:n.firstName,lastName:n.lastName,email:n.email,roleId:n.requestedRoleId,departmentId:n.departmentId});let t=await c.user.create({data:{employeeId:n.employeeId,firstName:n.firstName,lastName:n.lastName,email:n.email,phone:n.phone||null,password:s,roleId:n.requestedRoleId,departmentId:n.departmentId,isActive:!0,emailVerified:!1,profileColor:`#${Math.floor(16777215*Math.random()).toString(16)}`,profileInitials:`${n.firstName[0]}${n.lastName[0]}`.toUpperCase()},include:{role:!0,department:!0}});return console.log("User created successfully:",{id:t.id,employeeId:t.employeeId,isActive:t.isActive,roleName:t.role.name}),i.NextResponse.json({success:!0,message:"Access request approved successfully and user account created",data:{requestId:d.id,userId:t.id,employeeId:t.employeeId,defaultPassword:e,userRole:t.role.name,userDepartment:t.department?.name}})}catch(e){return console.error("Error creating user account:",e),await c.accessRequest.update({where:{id:o},data:{status:u.AccessRequestStatus.PENDING,reviewedAt:null,reviewComment:"Failed to create user account. Please try again.",reviewedBy:null}}),i.NextResponse.json({error:"Failed to create user account after approval",details:e instanceof Error?e.message:"Unknown error"},{status:500})}return i.NextResponse.json({success:!0,message:`Access request ${t}d successfully`,data:{requestId:d.id,status:d.status,reviewComment:d.reviewComment}})}catch(e){return console.error("Access request update error:",e),i.NextResponse.json({error:"Failed to update access request",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function m(e,{params:s}){try{let e=parseInt(s.id);if(isNaN(e))return i.NextResponse.json({error:"Invalid request ID"},{status:400});let t=await c.accessRequest.findUnique({where:{id:e}});if(!t)return i.NextResponse.json({error:"Access request not found"},{status:404});if(t.status!==u.AccessRequestStatus.PENDING)return i.NextResponse.json({error:"Only pending access requests can be deleted"},{status:400});return await c.accessRequest.delete({where:{id:e}}),i.NextResponse.json({success:!0,message:"Access request deleted successfully"})}catch(e){return console.error("Error deleting access request:",e),i.NextResponse.json({error:"Failed to delete access request"},{status:500})}}let f=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/access-requests/[id]/route",pathname:"/api/access-requests/[id]",filename:"route",bundlePath:"app/api/access-requests/[id]/route"},resolvedPagePath:"/workspace/app/api/access-requests/[id]/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:w,staticGenerationAsyncStorage:N,serverHooks:q}=f,I="/api/access-requests/[id]/route";function v(){return(0,n.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:N})}},16910:(e,s,t)=>{t.d(s,{Gv:()=>i,RA:()=>u,So:()=>l,c_:()=>n});var r=t(67390),a=t(93981);let o=new(t(53524)).PrismaClient,n=async e=>await a.vp(e,12),i=async(e,s)=>await a.qu(e,s),u=e=>{let s=process.env.JWT_SECRET||"fallback-secret-key";return r.sign({id:e.id,employeeId:e.employeeId,firstName:e.firstName,lastName:e.lastName,email:e.email,role:e.role,department:e.department},s,{expiresIn:"7d"})},l=async(e,s)=>{try{console.log(`🔍 Authentication attempt for Employee ID: ${e}`);let t=await o.user.findUnique({where:{employeeId:e},include:{role:!0,department:!0}});if(!t)return console.log(`❌ User not found for Employee ID: ${e}`),null;if(!t.password)return console.log(`❌ User ${e} has no password set`),null;console.log(`✅ User found: ${t.firstName} ${t.lastName} (${t.employeeId})`),console.log(`✅ User active: ${t.isActive}`),console.log(`✅ Password hash exists: ${!!t.password}`);let r=await i(s,t.password);if(console.log(`🔑 Password validation result: ${r}`),!r)return console.log(`❌ Invalid password for user: ${e}`),null;if(!t.isActive)return console.log(`❌ User ${e} is not active`),null;return{id:t.id,employeeId:t.employeeId,firstName:t.firstName,lastName:t.lastName,email:t.email,role:t.role.name,department:t.department?.name||"Unknown",isActive:t.isActive}}catch(e){return console.error("Authentication error:",e),null}}}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[7787,4833,5990],()=>t(68786));module.exports=r})();