"use strict";(()=>{var e={};e.id=4721,e.ids=[4721],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},58705:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{GET:()=>u});var s=t(73278),a=t(45002),n=t(54877),i=t(71309);let p=new(t(53524)).PrismaClient;async function u(e){try{let e=await p.role.findMany({orderBy:{name:"asc"}});return i.NextResponse.json(e)}catch(e){return console.error("Error fetching roles:",e),i.NextResponse.json({error:"Failed to fetch roles"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/roles/route",pathname:"/api/roles",filename:"route",bundlePath:"app/api/roles/route"},resolvedPagePath:"/workspace/app/api/roles/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:m}=l,x="/api/roles/route";function h(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:d})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[7787,4833],()=>t(58705));module.exports=o})();