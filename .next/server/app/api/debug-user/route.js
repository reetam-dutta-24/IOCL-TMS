"use strict";(()=>{var e={};e.id=1454,e.ids=[1454],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},31690:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>v,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>w});var t={};s.r(t),s.d(t,{POST:()=>p});var o=s(73278),a=s(45002),i=s(54877),n=s(71309),l=s(53524),d=s(16910);let u=new l.PrismaClient;async function p(e){try{let{employeeId:r,password:s}=await e.json(),t=await u.user.findUnique({where:{employeeId:r},include:{role:!0,department:!0}});if(!t)return n.NextResponse.json({found:!1,message:`User with Employee ID '${r}' not found in database`});let o=!1;return t.password&&s&&(o=await (0,d.Gv)(s,t.password)),n.NextResponse.json({found:!0,user:{id:t.id,employeeId:t.employeeId,firstName:t.firstName,lastName:t.lastName,email:t.email,role:t.role.name,department:t.department?.name||"No department",isActive:t.isActive,hasPassword:!!t.password,passwordValid:o},debug:{providedEmployeeId:r,providedPassword:s?`${s.substring(0,3)}***`:"No password provided",expectedPassword:"Welcome@123",passwordHashExists:!!t.password,userIsActive:t.isActive}})}catch(e){return console.error("Debug user error:",e),n.NextResponse.json({error:"Debug failed",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/debug-user/route",pathname:"/api/debug-user",filename:"route",bundlePath:"app/api/debug-user/route"},resolvedPagePath:"/workspace/app/api/debug-user/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:c,staticGenerationAsyncStorage:w,serverHooks:f}=m,v="/api/debug-user/route";function g(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:w})}},16910:(e,r,s)=>{s.d(r,{Gv:()=>n,RA:()=>l,So:()=>d,c_:()=>i});var t=s(67390),o=s(93981);let a=new(s(53524)).PrismaClient,i=async e=>await o.vp(e,12),n=async(e,r)=>await o.qu(e,r),l=e=>{let r=process.env.JWT_SECRET||"fallback-secret-key";return t.sign({id:e.id,employeeId:e.employeeId,firstName:e.firstName,lastName:e.lastName,email:e.email,role:e.role,department:e.department},r,{expiresIn:"7d"})},d=async(e,r)=>{try{console.log(`🔍 Authentication attempt for Employee ID: ${e}`);let s=await a.user.findUnique({where:{employeeId:e},include:{role:!0,department:!0}});if(!s)return console.log(`❌ User not found for Employee ID: ${e}`),null;if(!s.password)return console.log(`❌ User ${e} has no password set`),null;console.log(`✅ User found: ${s.firstName} ${s.lastName} (${s.employeeId})`),console.log(`✅ User active: ${s.isActive}`),console.log(`✅ Password hash exists: ${!!s.password}`);let t=await n(r,s.password);if(console.log(`🔑 Password validation result: ${t}`),!t)return console.log(`❌ Invalid password for user: ${e}`),null;if(!s.isActive)return console.log(`❌ User ${e} is not active`),null;return{id:s.id,employeeId:s.employeeId,firstName:s.firstName,lastName:s.lastName,email:s.email,role:s.role.name,department:s.department?.name||"Unknown",isActive:s.isActive}}catch(e){return console.error("Authentication error:",e),null}}}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[7787,4833,5990],()=>s(31690));module.exports=t})();