"use strict";(()=>{var e={};e.id=1785,e.ids=[1785],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},18172:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>f,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>w});var t={};r.r(t),r.d(t,{GET:()=>u,POST:()=>m});var a=r(73278),o=r(45002),i=r(54877),n=r(71309),l=r(53524),d=r(16910);let p=new l.PrismaClient;async function m(e){try{let e=await p.user.findMany({where:{OR:[{password:null},{password:""},{isActive:!1}]},include:{role:!0,department:!0}});console.log(`Found ${e.length} users with potential issues`);let s=[],r="Welcome@123",t=await (0,d.c_)(r);for(let r of e)try{let e=await p.user.update({where:{id:r.id},data:{password:t,isActive:!0,profileColor:r.profileColor||`#${Math.floor(16777215*Math.random()).toString(16)}`,profileInitials:r.profileInitials||`${r.firstName[0]}${r.lastName[0]}`.toUpperCase()}});s.push({id:e.id,employeeId:e.employeeId,name:`${e.firstName} ${e.lastName}`,email:e.email,role:r.role.name,department:r.department?.name||"No department"}),console.log(`Fixed user: ${e.employeeId} - ${e.firstName} ${e.lastName}`)}catch(e){console.error(`Failed to fix user ${r.employeeId}:`,e)}let a=await p.user.findMany({where:{password:{not:null}},include:{role:!0,department:!0}});return n.NextResponse.json({success:!0,summary:{totalUsers:a.length,usersWithIssues:e.length,usersFixed:s.length},fixedUsers:s,allUsers:a.map(e=>({id:e.id,employeeId:e.employeeId,name:`${e.firstName} ${e.lastName}`,email:e.email,role:e.role.name,department:e.department?.name||"No department",isActive:e.isActive,hasPassword:!!e.password})),defaultPassword:r,instructions:{loginWith:"Use Employee ID (not email) and password 'Welcome@123'",example:"Employee ID: EMP001, Password: Welcome@123"}})}catch(e){return console.error("Fix existing users error:",e),n.NextResponse.json({error:"Failed to fix existing users",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function u(e){try{let e=await p.user.findMany({include:{role:!0,department:!0}}),s=e.filter(e=>!e.password||""===e.password||!e.isActive);return n.NextResponse.json({totalUsers:e.length,usersWithIssues:s.length,users:e.map(e=>({id:e.id,employeeId:e.employeeId,name:`${e.firstName} ${e.lastName}`,email:e.email,role:e.role.name,department:e.department?.name||"No department",isActive:e.isActive,hasPassword:!!e.password,hasValidPassword:e.password&&e.password.length>10})),problematicUsers:s.map(e=>({employeeId:e.employeeId,name:`${e.firstName} ${e.lastName}`,issues:[e.password?"":"No password",""===e.password?"Empty password":"",e.isActive?"":"Not active"].filter(Boolean)}))})}catch(e){return console.error("Check existing users error:",e),n.NextResponse.json({error:"Failed to check existing users",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/fix-existing-users/route",pathname:"/api/fix-existing-users",filename:"route",bundlePath:"app/api/fix-existing-users/route"},resolvedPagePath:"/workspace/app/api/fix-existing-users/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:f,staticGenerationAsyncStorage:w,serverHooks:x}=c,h="/api/fix-existing-users/route";function g(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:w})}},16910:(e,s,r)=>{r.d(s,{Gv:()=>n,RA:()=>l,So:()=>d,c_:()=>i});var t=r(67390),a=r(93981);let o=new(r(53524)).PrismaClient,i=async e=>await a.vp(e,12),n=async(e,s)=>await a.qu(e,s),l=e=>{let s=process.env.JWT_SECRET||"fallback-secret-key";return t.sign({id:e.id,employeeId:e.employeeId,firstName:e.firstName,lastName:e.lastName,email:e.email,role:e.role,department:e.department},s,{expiresIn:"7d"})},d=async(e,s)=>{try{console.log(`🔍 Authentication attempt for Employee ID: ${e}`);let r=await o.user.findUnique({where:{employeeId:e},include:{role:!0,department:!0}});if(!r)return console.log(`❌ User not found for Employee ID: ${e}`),null;if(!r.password)return console.log(`❌ User ${e} has no password set`),null;console.log(`✅ User found: ${r.firstName} ${r.lastName} (${r.employeeId})`),console.log(`✅ User active: ${r.isActive}`),console.log(`✅ Password hash exists: ${!!r.password}`);let t=await n(s,r.password);if(console.log(`🔑 Password validation result: ${t}`),!t)return console.log(`❌ Invalid password for user: ${e}`),null;if(!r.isActive)return console.log(`❌ User ${e} is not active`),null;return{id:r.id,employeeId:r.employeeId,firstName:r.firstName,lastName:r.lastName,email:r.email,role:r.role.name,department:r.department?.name||"Unknown",isActive:r.isActive}}catch(e){return console.error("Authentication error:",e),null}}}};var s=require("../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[7787,4833,5990],()=>r(18172));module.exports=t})();