"use strict";(()=>{var e={};e.id=553,e.ids=[553],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},38307:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var r={};a.r(r),a.d(r,{GET:()=>p});var s=a(73278),i=a(45002),n=a(54877),o=a(71309);let u=new(a(53524)).PrismaClient;async function p(e){try{let e=await u.user.count(),t=await u.user.count({where:{isActive:!0}}),a=await u.accessRequest.count({where:{status:"PENDING"}}),r=await u.internshipRequest.count().catch(()=>0),s={totalUsers:e,activeUsers:t,pendingAccessRequests:a,totalRequests:r,systemHealth:98,databaseSize:"2.3 GB",lastBackup:new Date().toLocaleDateString(),criticalAlerts:0};return o.NextResponse.json(s)}catch(e){return console.error("Error fetching admin stats:",e),o.NextResponse.json({error:"Failed to fetch admin statistics"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/admin/stats/route",pathname:"/api/admin/stats",filename:"route",bundlePath:"app/api/admin/stats/route"},resolvedPagePath:"/workspace/app/api/admin/stats/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:m}=c,h="/api/admin/stats/route";function x(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[787,833],()=>a(38307));module.exports=r})();