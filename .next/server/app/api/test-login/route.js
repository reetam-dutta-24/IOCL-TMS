"use strict";(()=>{var e={};e.id=7174,e.ids=[7174],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},12799:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>f,staticGenerationAsyncStorage:()=>w});var s={};t.r(s),t.d(s,{POST:()=>m});var o=t(73278),a=t(45002),i=t(54877),n=t(71309),l=t(53524),d=t(16910);let p=new l.PrismaClient;async function m(e){try{let{employeeId:r,password:t}=await e.json();console.log(`🧪 TEST: Checking user ${r} with password ${t}`);let s=await p.user.findUnique({where:{employeeId:r},include:{role:!0,department:!0}});if(!s)return n.NextResponse.json({success:!1,message:`User with Employee ID '${r}' not found`,availableUsers:await p.user.findMany({select:{employeeId:!0,firstName:!0,lastName:!0,email:!0,isActive:!0}})});let o={provided:t,hasStoredPassword:!!s.password,passwordLength:s.password?.length||0,isValid:!1};s.password&&t&&(o.isValid=await (0,d.Gv)(t,s.password));let a={};for(let e of["Welcome@123","welcome123","admin123","123456"])s.password&&(a[e]=await (0,d.Gv)(e,s.password));return n.NextResponse.json({success:!0,user:{id:s.id,employeeId:s.employeeId,firstName:s.firstName,lastName:s.lastName,email:s.email,role:s.role.name,department:s.department?.name||"No department",isActive:s.isActive,createdAt:s.createdAt},passwordTest:o,passwordTests:a,recommendations:[`Try Employee ID: ${s.employeeId}`,"Try Password: Welcome@123",s.isActive?"✅ User is active":"❌ User is not active",s.password?"✅ Password hash exists":"❌ No password hash"]})}catch(e){return console.error("Test login error:",e),n.NextResponse.json({error:"Test failed",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/test-login/route",pathname:"/api/test-login",filename:"route",bundlePath:"app/api/test-login/route"},resolvedPagePath:"/workspace/app/api/test-login/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:w,serverHooks:f}=u,v="/api/test-login/route";function g(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:w})}},16910:(e,r,t)=>{t.d(r,{Gv:()=>n,RA:()=>l,So:()=>d,c_:()=>i});var s=t(67390),o=t(93981);let a=new(t(53524)).PrismaClient,i=async e=>await o.vp(e,12),n=async(e,r)=>await o.qu(e,r),l=e=>{let r=process.env.JWT_SECRET||"fallback-secret-key";return s.sign({id:e.id,employeeId:e.employeeId,firstName:e.firstName,lastName:e.lastName,email:e.email,role:e.role,department:e.department},r,{expiresIn:"7d"})},d=async(e,r)=>{try{console.log(`🔍 Authentication attempt for Employee ID: ${e}`);let t=await a.user.findUnique({where:{employeeId:e},include:{role:!0,department:!0}});if(!t)return console.log(`❌ User not found for Employee ID: ${e}`),null;if(!t.password)return console.log(`❌ User ${e} has no password set`),null;console.log(`✅ User found: ${t.firstName} ${t.lastName} (${t.employeeId})`),console.log(`✅ User active: ${t.isActive}`),console.log(`✅ Password hash exists: ${!!t.password}`);let s=await n(r,t.password);if(console.log(`🔑 Password validation result: ${s}`),!s)return console.log(`❌ Invalid password for user: ${e}`),null;if(!t.isActive)return console.log(`❌ User ${e} is not active`),null;return{id:t.id,employeeId:t.employeeId,firstName:t.firstName,lastName:t.lastName,email:t.email,role:t.role.name,department:t.department?.name||"Unknown",isActive:t.isActive}}catch(e){return console.error("Authentication error:",e),null}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[7787,4833,5990],()=>t(12799));module.exports=s})();